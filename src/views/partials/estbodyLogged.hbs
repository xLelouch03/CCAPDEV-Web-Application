<div id="section1">
    <div class="s1-container">
        <span id="page-header">{{establishment.name}}</span>
                <div class="container">
                    <div class="row">
                    {{#each establishment.images}}
                    {{#if @first}}
                    <div class="col-md-8 gallery-item">
                        <img src="{{this}}" alt="Image 1" class="img-fluid img1" style="height: 100%;">
                    </div>
                    {{/if}}
                    {{/each}}
                    <div class="col-md-4">
                        <div class="right-column">
                            <div class="row no-gutters">
                                {{#each establishment.images}}
                                {{#unless @first}}                                
                                <div class="col-12 gallery-item" style="height: 50%;">
                                    <img src="{{this}}" alt="Image 2" class="img-fluid img2" style="height: 100%;">
                                    {{#if @last}}
                                    <a href="#" class="btn btn-primary view-gallery-button custom" data-bs-toggle="modal" data-bs-target="#galleryModal" style="box-shadow: none;" >View Gallery</a>
                                    {{/if}}
                                </div>
                                {{/unless}}
                                {{/each}}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    <div id="textbox1">
        <p>
            {{establishment.description}}
        </p>
    </div>
</div>

<div id="section2">
    <div class="container">
        <!-- Calendly inline widget begin -->
        <div class="calendly-inline-widget" data-url="https://calendly.com/timothyjoshuatan/bookings" style="min-width:320px;height:700px;"></div>
        <script type="text/javascript" src="https://assets.calendly.com/assets/external/widget.js" async></script>
        <!-- Calendly inline widget end -->
    </div>
</div>

<div class="modal fade" id="galleryModal" tabindex="-1" aria-labelledby="galleryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl photo-gallery">
        <div class="modal-content">
            <div class="modal-header">
            <h5 class="modal-title" id="galleryModalLabel">{{establishment.name}} Gallery</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="carouselExample" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        {{#each establishment.images}}
                        <div class="carousel-item active">
                            <img src="{{this}}" class="d-block mx-auto" alt="Image {{@index}}">
                        </div>
                        {{/each}}
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="section3">
    <div class="s3-header-container">
        <span class="s3-header">Most Recent Reviews for {{establishment.name}}</span>
    </div>
    <div class="rating-container">
        <span class="rating">{{establishment.rating}}</span>
        <span class="rating-divisor">/5</span>
        <div class="average-star-rating-container">
                <i class="fa fa-star average-star-icon"></i>
                <i class="fa fa-star average-star-icon"></i>
                <i class="fa fa-star average-star-icon"></i>
                <i class="fa fa-star average-star-icon"></i>
                <i class="fa fa-star average-star-icon"></i>
        </div>
        <span class="review-count">{{review.count}} reviews</span> <!--WIP-->
    </div>
    <div class="options-container">
        <button class="review-filter" id="all" onclick="showAllReviews()">All</button>
        <button class="review-filter" id="photos" onclick="showPhotoReviews()">With Photos Only</button>
        <div class="dropdown dropdown-review-filter-container">
            <button class="dropdown-review-filter btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Sort by&nbsp;&nbsp;
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" id="most-recent">Most recent</a></li>
                <li><a class="dropdown-item" id="top-reviews">Top reviews</a></li>
            </ul>
        </div>
    </div>

{{#each reviews}}
    <div class="review-positioner {{#if this.images}}{{else}}text-only-review{{/if}}">
        <div class="review-container" data-review-id="{{this._id}}">
            <div class="profile-container">
                <img class="profile-picture" src="{{this.user.avatar}}">
                <div class="post-details-container">
                    <span class="profile-name"><a href="/profile/redirect/{{this.user._id}}" style="color: black; text-decoration: none;">{{this.user.username}}</a></span>
                    <span class="post-date">Last edited: {{this.lastEdited}}</span>
                </div>
            </div>
            <div class="review-rating-container">
                <!-- Render the review rating stars based on the 'rating' value -->
                {{#range 1 this.rating 1}}
                    <i class="fa fa-star review-star-icon"></i>
                {{/range}}
            </div>
            <span class="review-title">
                {{this.title}}
            </span>
            <span class="review-content">
                {{this.body}}
            </span>
            <div class="photo-album">
                {{#each this.images}}
                <img class="photo-album-photo" src="{{this}}">
                {{/each}}
            </div>
            <div class="userbuttons-container">
                <div class="helpful-container">
                    <span class="helpful-icon like-button"></span>
                    <span class="helpful-text like-count">Helpful {{this.likes}}</span>
                    <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <span class="unhelpful-icon dislike-button"></span>
                    <span class="helpful-text dislike-count">Unhelpful {{this.dislikes}}</span>
                </div>
                {{#if (equals this.user._id ../user._id)}}
                <div class="userreview-buttons-container">
                    <div class="edit-button-container">
                        <button class="edit-button" data-bs-toggle="modal" data-bs-target="#editReviewModal">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </button>
                    </div>
                    <div class="delete-button-container">
                        <button class="delete-button" data-bs-toggle="modal" data-bs-target="#deleteReviewModal">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </div>
                </div>
                {{/if}}
            </div>
        </div>
        {{#if this.reply}}
            <div class="feedback-positioner">
                <div class="feedback-container">
                    <div class="profile-container">
                        <img class="profile-picture" src="{{this.reply.establishment.avatar}}">
                        <div class="post-details-container">
                            <span class="profile-name"><a href="/profile/redirect/{{this.reply.establishment._id}}" style="color: black; text-decoration: none;">{{this.reply.establishment.name}}</a></span>
                            <span class="post-date">Last edited: {{this.reply.lastEdited}}</span>
                        </div>
                    </div>
                    <span class="feedback-content">
                        {{this.reply.body}}
                    </span>
                </div>
            </div>
        {{/if}}
    </div>
{{/each}}

<div class="pages-container">
        <button class="page-previous-button">&lt;</button>
        <div class="page-numbers-container">
            <!-- Page buttons will be dynamically added here -->
        </div>
        <button class="page-next-button" id="next-page">&gt;</button>
    </div>
</div>


<script>

// Get dropdown items
const topReviewsItem = document.querySelector('#top-reviews');
const mostRecentItem = document.querySelector('#most-recent');

// Event listener for 'Top reviews'
topReviewsItem.addEventListener('click', (event) => {
    event.preventDefault();
    fetchSortedReviews('likes');
});

// Event listener for 'Most recent'
mostRecentItem.addEventListener('click', (event) => {
    event.preventDefault();
    fetchSortedReviews('date');
});

// Function to fetch reviews
function fetchSortedReviews(sortBy) {
    fetch(`/establishment/:establishmentId?sortBy=${sortBy}`)
        .then(response => response.json())
        .then(data => {
            const reviewContainer = document.querySelector('.review-container');
            while (reviewContainer.firstChild) {
                reviewContainer.firstChild.remove();
            }

            data.reviews.forEach(review => {
                const reviewElement = document.createElement('div');
                reviewElement.className = 'review-positioner';
                reviewElement.dataset.id = review._id;

                const reviewContainer = document.createElement('div');
                reviewContainer.className = 'review-container';

                const profileContainer = document.createElement('div');
                profileContainer.className = 'profile-container';

                const profilePicture = document.createElement('img');
                profilePicture.className = 'profile-picture';
                profilePicture.src = review.user.avatar;

                const postDetailsContainer = document.createElement('div');
                postDetailsContainer.className = 'post-details-container';

                const profileName = document.createElement('span');
                profileName.className = 'profile-name';
                profileName.textContent = review.user.username;

                const postDate = document.createElement('span');
                postDate.className = 'post-date';
                postDate.textContent = `Last edited: ${review.datePosted}`;

                const reviewRatingContainer = document.createElement('div');
                reviewRatingContainer.className = 'review-rating-container';

                for(let i=0; i<review.rating; i++) {
                    const reviewStarIcon = document.createElement('i');
                    reviewStarIcon.className = 'fa fa-star review-star-icon';
                    reviewRatingContainer.appendChild(reviewStarIcon);
                }

                const reviewTitle = document.createElement('span');
                reviewTitle.className = 'review-title';
                reviewTitle.textContent = review.title;

                const reviewContent = document.createElement('span');
                reviewContent.className = 'review-content';
                reviewContent.textContent = review.body;

                postDetailsContainer.appendChild(profileName);
                postDetailsContainer.appendChild(postDate);

                profileContainer.appendChild(profilePicture);
                profileContainer.appendChild(postDetailsContainer);

                reviewContainer.appendChild(profileContainer);
                reviewContainer.appendChild(reviewRatingContainer);
                reviewContainer.appendChild(reviewTitle);
                reviewContainer.appendChild(reviewContent);

                reviewPositioner.appendChild(reviewContainer);

                let parentContainer = document.querySelector('.reviews-container'); // Replace with actual selector
                parentContainer.appendChild(reviewPositioner);

            });
        })
        .catch(error => console.error('Error:', error));
}
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.review-container').forEach(function(container) {
        container.addEventListener('click', function(event) {
            const reviewId = this.getAttribute('data-review-id');
            
            if (event.target.classList.contains('like-button')) {
                // Handle like action
                fetch(`/review/${reviewId}/like`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    const likeCountElement = this.querySelector('.like-count');
                    const dislikeCountElement = this.querySelector('.dislike-count');
                    likeCountElement.textContent = 'Helpful ' + data.likes;
                    dislikeCountElement.textContent = 'Unhelpful ' + data.dislikes;
                })
                .catch(error => console.error('Error:', error));
                
            } else if (event.target.classList.contains('dislike-button')) {
                // Handle dislike action
                fetch(`/review/${reviewId}/dislike`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    const likeCountElement = this.querySelector('.like-count');
                    const dislikeCountElement = this.querySelector('.dislike-count');
                    likeCountElement.textContent = 'Helpful ' + data.likes;
                    dislikeCountElement.textContent = 'Unhelpful ' + data.dislikes;
                })
                .catch(error => console.error('Error:', error));
            }
        });
    });
});


</script>