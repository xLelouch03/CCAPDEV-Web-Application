<div id="profile-container">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 left-container">
                <div class="profile-container2">
                    <img src="{{profile.avatar}}" alt="Profile Picture" class="profile-picture2">
                    <h4 class="name">{{profile.username}}</h4>
                    <h6 class="description">{{profile.profileDescription}}</h6>
                
                <ul class="nav flex-column nav-pills mt-3">
                    <li class="nav-item">
                        <a class="nav-link" id="reviewsTabLink" data-bs-toggle="pill" href="#reviews">Reviews</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="col-lg-9 right-container">
            <div class="content-container">
                <div class="tab-content">
                    <div id="reviews" class="tab-pane fade">
                        <h1>Reviews</h1>
                        <div class="reviews-container">
                            <!-- Review containers will be added here -->
                            {{#each reviews}}
                                <div class="review-positioner">
                                    <div class="review-container" data-review-id="{{this._id}}"> 
                                        <div class="profile-container"> 
                                            <img class="profile-picture" src="{{this.user.avatar}}">
                                            <div class="post-details-container">
                                                <span class="profile-name"><a href="/profile/user/{{this.user._id}}" style="color: black; text-decoration: none;">{{this.user.username}}</a></span>
                                                <span class="post-date">Last edited: {{this.datePosted}}</span>
                                            </div>
                                        </div>
                                        <div class="review-rating-container">
                                            <!-- Render the review rating stars based on the 'rating' value -->
                                            {{#range 1 this.rating 1}}
                                                <i class="fa fa-star review-star-icon"></i>
                                            {{/range}}
                                        </div>
                                        <span class="review-title">
                                            {{this.title}}
                                        </span>
                                        <span class="review-content">
                                            {{this.body}}
                                        </span>
                                        <div class="photo-album">
                                            {{#each this.images}}
                                            <img class="photo-album-photo" src="{{this}}">
                                            {{/each}}
                                        </div>
                                        <div class="userbuttons-container">
                                            <div class="helpful-container">
                                                <span class="helpful-icon like-button"></span>
                                                <span class="helpful-text like-count">Helpful {{this.likes}}</span>
                                                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                                                <span class="unhelpful-icon dislike-button"></span>
                                                <span class="helpful-text dislike-count">Unhelpful {{this.dislikes}}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {{/each}}
                        </div>
                    </div>
                </div>
            </div>
        </div>            
    </div>
</div>
</div>


<script>

// Function to check if the text exceeds the word limit
function exceedsWordLimit(text, limit) {
    let words = text.split(/\s+/); // Split text into words based on spaces
    return words.length > limit;
}

document.addEventListener("DOMContentLoaded", function() {
    // Process each review
    document.querySelectorAll(".review-content").forEach(function(span) {
        let originalText = span.textContent.trim();

        if (exceedsWordLimit(originalText, 50)) { // If text exceeds 50 words
            let truncatedText = originalText.split(/\s+/).slice(0, 50).join(' ') + '...';
            
            // Set truncated text and append 'Read more' button
            span.innerHTML = truncatedText + ' <span class="untruncate-button">Read more</span>';
            
            // Store original text as a data attribute for easy access
            span.setAttribute('data-original-text', originalText);
        }
    });

    // Using event delegation for the buttons
    document.body.addEventListener("click", function(event) {
        // Check if clicked element is 'Read more' button
        if (event.target && event.target.className === "untruncate-button") {
            let span = event.target.closest('.review-content');
            let originalText = span.getAttribute('data-original-text');
            span.innerHTML = originalText + ' <span class="truncate-button">Read less</span>';
        }

        // Check if clicked element is 'Read less' button
        if (event.target && event.target.className === "truncate-button") {
            let span = event.target.closest('.review-content');
            let originalText = span.getAttribute('data-original-text');
            let truncatedText = originalText.split(/\s+/).slice(0, 50).join(' ') + '...';
            span.innerHTML = truncatedText + ' <span class="untruncate-button">Read more</span>';
        }
    });
});

</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.review-container').forEach(function(container) {
        container.addEventListener('click', function(event) {
            const reviewId = this.getAttribute('data-review-id');
            
            if (event.target.classList.contains('like-button')) {
                // Handle like action
                fetch(`/review/${reviewId}/like`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    const likeCountElement = this.querySelector('.like-count');
                    const dislikeCountElement = this.querySelector('.dislike-count');
                    likeCountElement.textContent = 'Helpful ' + data.likes;
                    dislikeCountElement.textContent = 'Unhelpful ' + data.dislikes;
                })
                .catch(error => console.error('Error:', error));
                
            } else if (event.target.classList.contains('dislike-button')) {
                // Handle dislike action
                fetch(`/review/${reviewId}/dislike`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    const likeCountElement = this.querySelector('.like-count');
                    const dislikeCountElement = this.querySelector('.dislike-count');
                    likeCountElement.textContent = 'Helpful ' + data.likes;
                    dislikeCountElement.textContent = 'Unhelpful ' + data.dislikes;
                })
                .catch(error => console.error('Error:', error));
            }
        });
    });
});
</script>